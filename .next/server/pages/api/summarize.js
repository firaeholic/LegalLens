"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/summarize";
exports.ids = ["pages/api/summarize"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsummarize&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csummarize.ts&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsummarize&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csummarize.ts&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_summarize_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\summarize.ts */ \"(api)/./pages/api/summarize.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_summarize_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_summarize_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/summarize\",\n        pathname: \"/api/summarize\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_summarize_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnN1bW1hcml6ZSZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDc3VtbWFyaXplLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ3VEO0FBQ3ZEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxvREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsb0RBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVnYWxsZW5zLWFpLz8wOTQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlc1xcXFxhcGlcXFxcc3VtbWFyaXplLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc3VtbWFyaXplXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvc3VtbWFyaXplXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsummarize&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csummarize.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/summarize.ts":
/*!********************************!*\
  !*** ./pages/api/summarize.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const { text } = req.body;\n        if (!text || typeof text !== \"string\") {\n            return res.status(400).json({\n                error: \"No text provided for summarization\"\n            });\n        }\n        if (text.length < 50) {\n            return res.status(400).json({\n                error: \"Text too short for meaningful summarization\"\n            });\n        }\n        // Try multiple free AI services in order of preference\n        let summary = \"\";\n        try {\n            // First try: Hugging Face Inference API (free tier)\n            summary = await summarizeWithHuggingFace(text);\n        } catch (error) {\n            console.log(\"Hugging Face failed, trying fallback:\", error);\n            try {\n                // Second try: OpenAI-compatible free services\n                summary = await summarizeWithFreeAPI(text);\n            } catch (error2) {\n                console.log(\"Free API failed, using rule-based summarization:\", error2);\n                // Fallback: Rule-based summarization\n                summary = await ruleBasedSummarization(text);\n            }\n        }\n        if (!summary.trim()) {\n            return res.status(500).json({\n                error: \"Failed to generate summary\"\n            });\n        }\n        res.status(200).json({\n            summary\n        });\n    } catch (error) {\n        console.error(\"Summarization error:\", error);\n        res.status(500).json({\n            error: \"Failed to process summarization request\"\n        });\n    }\n}\n// Try Hugging Face Inference API (free tier)\nasync function summarizeWithHuggingFace(text) {\n    // Note: In production, you would use a real Hugging Face API key\n    // For demo purposes, we'll simulate the response\n    const API_URL = \"https://api-inference.huggingface.co/models/facebook/bart-large-cnn\";\n    const HF_API_KEY = process.env.HUGGINGFACE_API_KEY;\n    if (!HF_API_KEY) {\n        throw new Error(\"Hugging Face API key not configured\");\n    }\n    // Truncate text if too long (BART has token limits)\n    const truncatedText = text.length > 1000 ? text.substring(0, 1000) + \"...\" : text;\n    const response = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": `Bearer ${HF_API_KEY}`,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            inputs: truncatedText,\n            parameters: {\n                max_length: 150,\n                min_length: 50,\n                do_sample: false\n            }\n        })\n    });\n    if (!response.ok) {\n        throw new Error(`Hugging Face API error: ${response.status}`);\n    }\n    const result = await response.json();\n    if (result.error) {\n        throw new Error(result.error);\n    }\n    return result[0]?.summary_text || result.summary_text || \"\";\n}\n// Try free OpenAI-compatible APIs\nasync function summarizeWithFreeAPI(text) {\n    // You can use services like:\n    // - Together AI (free tier)\n    // - Replicate (free tier)\n    // - Groq (free tier)\n    // For demo, we'll simulate a response\n    throw new Error(\"Free API not configured\");\n}\n// Fallback: Rule-based summarization\nasync function ruleBasedSummarization(text) {\n    // Simple extractive summarization\n    const sentences = text.split(/[.!?]+/).filter((s)=>s.trim().length > 20);\n    if (sentences.length === 0) {\n        return \"Unable to generate summary from the provided text.\";\n    }\n    // Score sentences based on keywords and position\n    const legalKeywords = [\n        \"agreement\",\n        \"contract\",\n        \"party\",\n        \"parties\",\n        \"terms\",\n        \"conditions\",\n        \"payment\",\n        \"liability\",\n        \"warranty\",\n        \"termination\",\n        \"breach\",\n        \"confidentiality\",\n        \"intellectual property\",\n        \"indemnification\",\n        \"governing law\",\n        \"jurisdiction\",\n        \"dispute\",\n        \"arbitration\",\n        \"force majeure\",\n        \"assignment\",\n        \"modification\",\n        \"severability\"\n    ];\n    const scoredSentences = sentences.map((sentence, index)=>{\n        let score = 0;\n        const lowerSentence = sentence.toLowerCase();\n        // Keyword scoring\n        legalKeywords.forEach((keyword)=>{\n            if (lowerSentence.includes(keyword)) {\n                score += 2;\n            }\n        });\n        // Position scoring (first and last sentences are important)\n        if (index === 0 || index === sentences.length - 1) {\n            score += 3;\n        }\n        // Length scoring (prefer medium-length sentences)\n        if (sentence.length > 50 && sentence.length < 200) {\n            score += 1;\n        }\n        return {\n            sentence: sentence.trim(),\n            score,\n            index\n        };\n    });\n    // Sort by score and take top sentences\n    const topSentences = scoredSentences.sort((a, b)=>b.score - a.score).slice(0, Math.min(5, Math.ceil(sentences.length * 0.3))).sort((a, b)=>a.index - b.index) // Restore original order\n    .map((item)=>item.sentence);\n    let summary = topSentences.join(\". \");\n    // Add context if we have legal document indicators\n    const hasLegalTerms = legalKeywords.some((keyword)=>text.toLowerCase().includes(keyword));\n    if (hasLegalTerms) {\n        const documentType = identifyDocumentType(text);\n        summary = `This appears to be ${documentType}. ${summary}`;\n    }\n    // Ensure summary ends properly\n    if (!summary.endsWith(\".\")) {\n        summary += \".\";\n    }\n    return summary;\n}\n// Identify document type based on content\nfunction identifyDocumentType(text) {\n    const lowerText = text.toLowerCase();\n    if (lowerText.includes(\"employment\") || lowerText.includes(\"employee\")) {\n        return \"an employment agreement\";\n    }\n    if (lowerText.includes(\"service\") && lowerText.includes(\"agreement\")) {\n        return \"a service agreement\";\n    }\n    if (lowerText.includes(\"lease\") || lowerText.includes(\"rental\")) {\n        return \"a lease agreement\";\n    }\n    if (lowerText.includes(\"purchase\") || lowerText.includes(\"sale\")) {\n        return \"a purchase agreement\";\n    }\n    if (lowerText.includes(\"license\") || lowerText.includes(\"licensing\")) {\n        return \"a licensing agreement\";\n    }\n    if (lowerText.includes(\"confidentiality\") || lowerText.includes(\"non-disclosure\")) {\n        return \"a confidentiality agreement\";\n    }\n    if (lowerText.includes(\"partnership\") || lowerText.includes(\"joint venture\")) {\n        return \"a partnership agreement\";\n    }\n    return \"a legal document\";\n}\nconst config = {\n    api: {\n        bodyParser: {\n            sizeLimit: \"1mb\"\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/summarize.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsummarize&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csummarize.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();