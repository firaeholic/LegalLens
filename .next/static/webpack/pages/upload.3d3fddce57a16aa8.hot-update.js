"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/upload",{

/***/ "./lib/utils.ts":
/*!**********************!*\
  !*** ./lib/utils.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppError: function() { return /* binding */ AppError; },\n/* harmony export */   base64ToFile: function() { return /* binding */ base64ToFile; },\n/* harmony export */   calculateRiskScore: function() { return /* binding */ calculateRiskScore; },\n/* harmony export */   cn: function() { return /* binding */ cn; },\n/* harmony export */   debounce: function() { return /* binding */ debounce; },\n/* harmony export */   detectFileTypeFromExtension: function() { return /* binding */ detectFileTypeFromExtension; },\n/* harmony export */   extractKeywords: function() { return /* binding */ extractKeywords; },\n/* harmony export */   fileToBase64: function() { return /* binding */ fileToBase64; },\n/* harmony export */   formatDate: function() { return /* binding */ formatDate; },\n/* harmony export */   formatDuration: function() { return /* binding */ formatDuration; },\n/* harmony export */   formatFileSize: function() { return /* binding */ formatFileSize; },\n/* harmony export */   generateId: function() { return /* binding */ generateId; },\n/* harmony export */   getFileExtension: function() { return /* binding */ getFileExtension; },\n/* harmony export */   highlightText: function() { return /* binding */ highlightText; },\n/* harmony export */   isValidFileType: function() { return /* binding */ isValidFileType; },\n/* harmony export */   logger: function() { return /* binding */ logger; },\n/* harmony export */   retry: function() { return /* binding */ retry; },\n/* harmony export */   storage: function() { return /* binding */ storage; },\n/* harmony export */   truncateText: function() { return /* binding */ truncateText; }\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tailwind-merge */ \"./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/constants */ \"./config/constants.ts\");\n// Utility functions for LegalLens AI\n\n\n\n// Tailwind CSS class merging utility\nfunction cn() {\n    for(var _len = arguments.length, inputs = new Array(_len), _key = 0; _key < _len; _key++){\n        inputs[_key] = arguments[_key];\n    }\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_2__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n// Error handling utilities\nclass AppError extends Error {\n    toAPIError() {\n        return {\n            code: this.code,\n            message: this.message,\n            details: this.details,\n            timestamp: this.timestamp\n        };\n    }\n    constructor(code, message, details){\n        super(message || _config_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR_MESSAGES[code] || \"An unknown error occurred\");\n        this.code = code;\n        this.details = details;\n        this.timestamp = new Date();\n        this.name = \"AppError\";\n    }\n}\n// Logging utilities\nconst logger = {\n    error: (message, error, context)=>{\n        const logEntry = {\n            level: \"ERROR\",\n            message,\n            error: error instanceof Error ? {\n                name: error.name,\n                message: error.message,\n                stack: error.stack\n            } : error,\n            context,\n            timestamp: new Date().toISOString()\n        };\n        console.error(\"[LegalLens]\", logEntry);\n    },\n    warn: (message, data, context)=>{\n        const logEntry = {\n            level: \"WARN\",\n            message,\n            data,\n            context,\n            timestamp: new Date().toISOString()\n        };\n        console.warn(\"[LegalLens]\", logEntry);\n    },\n    info: (message, data, context)=>{\n        const logEntry = {\n            level: \"INFO\",\n            message,\n            data,\n            context,\n            timestamp: new Date().toISOString()\n        };\n        console.info(\"[LegalLens]\", logEntry);\n    },\n    debug: (message, data, context)=>{\n        if (true) {\n            const logEntry = {\n                level: \"DEBUG\",\n                message,\n                data,\n                context,\n                timestamp: new Date().toISOString()\n            };\n            console.debug(\"[LegalLens]\", logEntry);\n        }\n    }\n};\n// File validation utilities\nfunction getFileExtension(fileName) {\n    var _fileName_split_pop;\n    return ((_fileName_split_pop = fileName.split(\".\").pop()) === null || _fileName_split_pop === void 0 ? void 0 : _fileName_split_pop.toLowerCase()) || \"\";\n}\nfunction detectFileTypeFromExtension(fileName) {\n    const ext = getFileExtension(fileName);\n    const mimeMap = {\n        \"pdf\": \"application/pdf\",\n        \"png\": \"image/png\",\n        \"jpg\": \"image/jpeg\",\n        \"jpeg\": \"image/jpeg\",\n        \"webp\": \"image/webp\"\n    };\n    return mimeMap[ext] || \"\";\n}\nfunction isValidFileType(file) {\n    const fileName = file.name.toLowerCase();\n    const fileType = file.type.toLowerCase();\n    // Check common image and PDF types\n    const validTypes = [\n        \"application/pdf\",\n        \"image/png\",\n        \"image/jpeg\",\n        \"image/jpg\",\n        \"image/webp\"\n    ];\n    const validExtensions = [\n        \".pdf\",\n        \".png\",\n        \".jpg\",\n        \".jpeg\",\n        \".webp\"\n    ];\n    return validTypes.includes(fileType) || validExtensions.some((ext)=>fileName.endsWith(ext)) || fileType.includes(\"png\") || fileType.includes(\"jpeg\") || fileType.includes(\"pdf\") || fileType.includes(\"webp\");\n}\n// File conversion utilities\nfunction fileToBase64(file) {\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = ()=>{\n            if (typeof reader.result === \"string\") {\n                resolve(reader.result);\n            } else {\n                reject(new AppError(_config_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR_CODES.INVALID_INPUT, \"Failed to convert file to base64\"));\n            }\n        };\n        reader.onerror = ()=>reject(new AppError(_config_constants__WEBPACK_IMPORTED_MODULE_1__.ERROR_CODES.INVALID_INPUT, \"Failed to read file\"));\n    });\n}\nfunction base64ToFile(base64, filename) {\n    var _arr__match;\n    const arr = base64.split(\",\");\n    const mime = ((_arr__match = arr[0].match(/:(.*?);/)) === null || _arr__match === void 0 ? void 0 : _arr__match[1]) || \"application/octet-stream\";\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    while(n--){\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([\n        u8arr\n    ], filename, {\n        type: mime\n    });\n}\n// Storage utilities\nconst storage = {\n    get: (key)=>{\n        if (false) {}\n        try {\n            const item = sessionStorage.getItem(key);\n            return item ? JSON.parse(item) : null;\n        } catch (error) {\n            logger.error(\"Failed to get item from storage\", error, \"storage.get\");\n            return null;\n        }\n    },\n    set: (key, value)=>{\n        if (false) {}\n        try {\n            sessionStorage.setItem(key, JSON.stringify(value));\n        } catch (error) {\n            logger.error(\"Failed to set item in storage\", error, \"storage.set\");\n        }\n    },\n    remove: (key)=>{\n        if (false) {}\n        try {\n            sessionStorage.removeItem(key);\n        } catch (error) {\n            logger.error(\"Failed to remove item from storage\", error, \"storage.remove\");\n        }\n    },\n    clear: ()=>{\n        if (false) {}\n        try {\n            sessionStorage.clear();\n        } catch (error) {\n            logger.error(\"Failed to clear storage\", error, \"storage.clear\");\n        }\n    }\n};\n// Format utilities\nfunction formatFileSize(bytes) {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\n        \"Bytes\",\n        \"KB\",\n        \"MB\",\n        \"GB\"\n    ];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n}\nfunction formatDuration(ms) {\n    if (ms < 1000) return \"\".concat(ms, \"ms\");\n    if (ms < 60000) return \"\".concat((ms / 1000).toFixed(1), \"s\");\n    return \"\".concat((ms / 60000).toFixed(1), \"m\");\n}\nfunction formatDate(date) {\n    return new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n    }).format(date);\n}\n// Text processing utilities\nfunction truncateText(text, maxLength) {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + \"...\";\n}\nfunction highlightText(text, searchTerm) {\n    if (!searchTerm) return text;\n    const regex = new RegExp(\"(\".concat(searchTerm, \")\"), \"gi\");\n    return text.replace(regex, '<mark class=\"bg-yellow-200\">$1</mark>');\n}\nfunction extractKeywords(text) {\n    let count = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n    const words = text.toLowerCase().replace(/[^\\w\\s]/g, \"\").split(/\\s+/).filter((word)=>word.length > 3);\n    const stopWords = new Set([\n        \"the\",\n        \"and\",\n        \"or\",\n        \"but\",\n        \"in\",\n        \"on\",\n        \"at\",\n        \"to\",\n        \"for\",\n        \"of\",\n        \"with\",\n        \"by\",\n        \"from\",\n        \"up\",\n        \"about\",\n        \"into\",\n        \"through\",\n        \"during\",\n        \"before\",\n        \"after\",\n        \"above\",\n        \"below\",\n        \"between\",\n        \"among\",\n        \"this\",\n        \"that\",\n        \"these\",\n        \"those\",\n        \"will\",\n        \"shall\",\n        \"may\",\n        \"can\",\n        \"could\",\n        \"would\",\n        \"should\"\n    ]);\n    const wordCount = new Map();\n    words.forEach((word)=>{\n        if (!stopWords.has(word)) {\n            wordCount.set(word, (wordCount.get(word) || 0) + 1);\n        }\n    });\n    return Array.from(wordCount.entries()).sort((a, b)=>b[1] - a[1]).slice(0, count).map((param)=>{\n        let [word] = param;\n        return word;\n    });\n}\n// Debounce utility\nfunction debounce(func, wait) {\n    let timeout;\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(()=>func(...args), wait);\n    };\n}\n// Retry utility\nasync function retry(fn) {\n    let maxAttempts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 3, delay = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1000;\n    let lastError;\n    for(let attempt = 1; attempt <= maxAttempts; attempt++){\n        try {\n            return await fn();\n        } catch (error) {\n            lastError = error instanceof Error ? error : new Error(String(error));\n            if (attempt === maxAttempts) {\n                throw lastError;\n            }\n            logger.warn(\"Attempt \".concat(attempt, \" failed, retrying in \").concat(delay, \"ms\"), lastError, \"retry\");\n            await new Promise((resolve)=>setTimeout(resolve, delay));\n        }\n    }\n    throw lastError;\n}\n// Generate unique ID\nfunction generateId() {\n    return Math.random().toString(36).substring(2) + Date.now().toString(36);\n}\n// Calculate risk score\nfunction calculateRiskScore(clauses) {\n    if (clauses.length === 0) return 0;\n    const weights = {\n        high: 1,\n        medium: 0.6,\n        low: 0.3,\n        positive: -0.2\n    };\n    const totalWeight = clauses.reduce((sum, clause)=>{\n        return sum + (weights[clause.riskLevel] || 0);\n    }, 0);\n    return Math.max(0, Math.min(1, totalWeight / clauses.length));\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/utils.ts\n"));

/***/ })

});