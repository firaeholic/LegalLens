"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/upload",{

/***/ "./hooks/useFileUpload.ts":
/*!********************************!*\
  !*** ./hooks/useFileUpload.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useFileUpload: function() { return /* binding */ useFileUpload; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/utils */ \"./lib/utils.ts\");\n/* harmony import */ var _lib_validation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/validation */ \"./lib/validation.ts\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../config/constants */ \"./config/constants.ts\");\n// Custom hook for file upload functionality\n\n\n\n\nfunction useFileUpload() {\n    const [uploadedFile, setUploadedFile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isDragActive, setIsDragActive] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [uploadError, setUploadError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isProcessing, setIsProcessing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const fileInputRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const processFile = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (file)=>{\n        setIsProcessing(true);\n        setUploadError(null);\n        try {\n            // Enhanced file validation with detailed logging\n            _lib_utils__WEBPACK_IMPORTED_MODULE_1__.logger.info(\"Starting file validation\", {\n                fileName: file.name,\n                fileSize: file.size,\n                fileType: file.type,\n                lastModified: file.lastModified\n            }, \"useFileUpload\");\n            const validation = (0,_lib_validation__WEBPACK_IMPORTED_MODULE_2__.validateFile)(file);\n            if (!validation.isValid) {\n                const errorMessage = validation.error || \"Invalid file type or format\";\n                _lib_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"File validation failed\", {\n                    fileName: file.name,\n                    fileType: file.type,\n                    error: errorMessage,\n                    warnings: validation.warnings\n                }, \"useFileUpload\");\n                throw new Error(errorMessage);\n            }\n            if (validation.warnings && validation.warnings.length > 0) {\n                _lib_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\"File validation warnings\", {\n                    fileName: file.name,\n                    warnings: validation.warnings\n                }, \"useFileUpload\");\n            }\n            _lib_utils__WEBPACK_IMPORTED_MODULE_1__.logger.info(\"Processing uploaded file\", {\n                fileName: file.name,\n                fileSize: file.size,\n                fileType: file.type\n            }, \"useFileUpload\");\n            // Convert to base64 for processing\n            const base64 = await (0,_lib_utils__WEBPACK_IMPORTED_MODULE_1__.fileToBase64)(file);\n            const uploadedFile = {\n                file,\n                name: file.name,\n                size: file.size,\n                type: file.type,\n                base64,\n                uploadedAt: new Date()\n            };\n            setUploadedFile(uploadedFile);\n            _lib_utils__WEBPACK_IMPORTED_MODULE_1__.logger.info(\"File processed successfully\", {\n                fileName: file.name,\n                base64Length: base64.length\n            }, \"useFileUpload\");\n            return uploadedFile;\n        } catch (error) {\n            const errorMessage = error instanceof Error ? error.message : \"Failed to process file\";\n            setUploadError(errorMessage);\n            _lib_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"File processing failed\", error, \"useFileUpload\");\n            throw error;\n        } finally{\n            setIsProcessing(false);\n        }\n    }, []);\n    const handleFileSelect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (files)=>{\n        const fileArray = Array.from(files);\n        if (fileArray.length === 0) {\n            return;\n        }\n        if (fileArray.length > 1) {\n            setUploadError(\"Please select only one file at a time\");\n            return;\n        }\n        const file = fileArray[0];\n        try {\n            await processFile(file);\n        } catch (error) {\n        // Error is already handled in processFile\n        }\n    }, [\n        processFile\n    ]);\n    const handleDrop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (e)=>{\n        e.preventDefault();\n        setIsDragActive(false);\n        const files = e.dataTransfer.files;\n        await handleFileSelect(files);\n    }, [\n        handleFileSelect\n    ]);\n    const handleDragOver = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{\n        e.preventDefault();\n        setIsDragActive(true);\n    }, []);\n    const handleDragLeave = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{\n        e.preventDefault();\n        setIsDragActive(false);\n    }, []);\n    const handleInputChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (e)=>{\n        const files = e.target.files;\n        if (files) {\n            await handleFileSelect(files);\n        }\n    }, [\n        handleFileSelect\n    ]);\n    const openFileDialog = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        var _fileInputRef_current;\n        (_fileInputRef_current = fileInputRef.current) === null || _fileInputRef_current === void 0 ? void 0 : _fileInputRef_current.click();\n    }, []);\n    const clearFile = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setUploadedFile(null);\n        setUploadError(null);\n        setIsProcessing(false);\n        // Reset file input\n        if (fileInputRef.current) {\n            fileInputRef.current.value = \"\";\n        }\n        _lib_utils__WEBPACK_IMPORTED_MODULE_1__.logger.info(\"File cleared\", {}, \"useFileUpload\");\n    }, []);\n    const retryUpload = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.file) {\n            try {\n                await processFile(uploadedFile.file);\n            } catch (error) {\n            // Error is already handled in processFile\n            }\n        }\n    }, [\n        uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.file,\n        processFile\n    ]);\n    // Get file preview URL for images\n    const getPreviewUrl = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (!(uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.file)) return null;\n        if (uploadedFile.file.type.startsWith(\"image/\")) {\n            return URL.createObjectURL(uploadedFile.file);\n        }\n        return null;\n    }, [\n        uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.file\n    ]);\n    // Get file icon based on type\n    const getFileIcon = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (!(uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.type)) return \"file\";\n        if (uploadedFile.type === \"application/pdf\") return \"file-text\";\n        if (uploadedFile.type.startsWith(\"image/\")) return \"image\";\n        if (uploadedFile.type.includes(\"word\")) return \"file-text\";\n        if (uploadedFile.type.includes(\"text\")) return \"file-text\";\n        return \"file\";\n    }, [\n        uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.type\n    ]);\n    // Check if file type is supported\n    const isFileTypeSupported = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((file)=>{\n        return _config_constants__WEBPACK_IMPORTED_MODULE_3__.APP_CONFIG.supportedFormats.some((format)=>{\n            if (format.startsWith(\".\")) {\n                return file.name.toLowerCase().endsWith(format.toLowerCase());\n            }\n            return file.type === format;\n        });\n    }, []);\n    // Get upload progress (for future enhancement)\n    const getUploadProgress = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (isProcessing) return 50 // Simulated progress\n        ;\n        if (uploadedFile) return 100;\n        return 0;\n    }, [\n        isProcessing,\n        uploadedFile\n    ]);\n    return {\n        uploadedFile,\n        isDragActive,\n        uploadError,\n        isProcessing,\n        fileInputRef,\n        handleDrop,\n        handleDragOver,\n        handleDragLeave,\n        handleInputChange,\n        openFileDialog,\n        clearFile,\n        retryUpload,\n        getPreviewUrl,\n        getFileIcon,\n        isFileTypeSupported,\n        getUploadProgress\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q3ZDLE9BQU9aLHlEQUFVQSxDQUFDNEQsZ0JBQWdCLENBQUNDLElBQUksQ0FBQ0MsQ0FBQUE7WUFDdEMsSUFBSUEsT0FBT1IsVUFBVSxDQUFDLE1BQU07Z0JBQzFCLE9BQU8xQyxLQUFLRyxJQUFJLENBQUNnRCxXQUFXLEdBQUdDLFFBQVEsQ0FBQ0YsT0FBT0MsV0FBVztZQUM1RDtZQUNBLE9BQU9uRCxLQUFLTyxJQUFJLEtBQUsyQztRQUN2QjtJQUNGLEdBQUcsRUFBRTtJQUVMLCtDQUErQztJQUMvQyxNQUFNRyxvQkFBb0J0RSxrREFBV0EsQ0FBQztRQUNwQyxJQUFJYSxjQUFjLE9BQU8sR0FBRyxxQkFBcUI7O1FBQ2pELElBQUlOLGNBQWMsT0FBTztRQUN6QixPQUFPO0lBQ1QsR0FBRztRQUFDTTtRQUFjTjtLQUFhO0lBRS9CLE9BQU87UUFDTEE7UUFDQUU7UUFDQUU7UUFDQUU7UUFDQUU7UUFDQTZCO1FBQ0FJO1FBQ0FDO1FBQ0FDO1FBQ0FFO1FBQ0FHO1FBQ0FFO1FBQ0FDO1FBQ0FJO1FBQ0FFO1FBQ0FNO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ob29rcy91c2VGaWxlVXBsb2FkLnRzPzAzYzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ3VzdG9tIGhvb2sgZm9yIGZpbGUgdXBsb2FkIGZ1bmN0aW9uYWxpdHlcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VDYWxsYmFjaywgdXNlUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgdHlwZSB7IFVwbG9hZGVkRmlsZSwgVXNlRmlsZVVwbG9hZFJldHVybiB9IGZyb20gJy4uL3R5cGVzJ1xuaW1wb3J0IHsgbG9nZ2VyLCBmaWxlVG9CYXNlNjQgfSBmcm9tICcuLi9saWIvdXRpbHMnXG5pbXBvcnQgeyB2YWxpZGF0ZUZpbGUgfSBmcm9tICcuLi9saWIvdmFsaWRhdGlvbidcbmltcG9ydCB7IEFQUF9DT05GSUcgfSBmcm9tICcuLi9jb25maWcvY29uc3RhbnRzJ1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlRmlsZVVwbG9hZCgpOiBVc2VGaWxlVXBsb2FkUmV0dXJuIHtcbiAgY29uc3QgW3VwbG9hZGVkRmlsZSwgc2V0VXBsb2FkZWRGaWxlXSA9IHVzZVN0YXRlPFVwbG9hZGVkRmlsZSB8IG51bGw+KG51bGwpXG4gIGNvbnN0IFtpc0RyYWdBY3RpdmUsIHNldElzRHJhZ0FjdGl2ZV0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3VwbG9hZEVycm9yLCBzZXRVcGxvYWRFcnJvcl0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKVxuICBjb25zdCBbaXNQcm9jZXNzaW5nLCBzZXRJc1Byb2Nlc3NpbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IGZpbGVJbnB1dFJlZiA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKVxuXG4gIGNvbnN0IHByb2Nlc3NGaWxlID0gdXNlQ2FsbGJhY2soYXN5bmMgKGZpbGU6IEZpbGUpOiBQcm9taXNlPFVwbG9hZGVkRmlsZT4gPT4ge1xuICAgIHNldElzUHJvY2Vzc2luZyh0cnVlKVxuICAgIHNldFVwbG9hZEVycm9yKG51bGwpXG5cbiAgICB0cnkge1xuICAgICAgLy8gRW5oYW5jZWQgZmlsZSB2YWxpZGF0aW9uIHdpdGggZGV0YWlsZWQgbG9nZ2luZ1xuICAgICAgbG9nZ2VyLmluZm8oJ1N0YXJ0aW5nIGZpbGUgdmFsaWRhdGlvbicsIHtcbiAgICAgICAgZmlsZU5hbWU6IGZpbGUubmFtZSxcbiAgICAgICAgZmlsZVNpemU6IGZpbGUuc2l6ZSxcbiAgICAgICAgZmlsZVR5cGU6IGZpbGUudHlwZSxcbiAgICAgICAgbGFzdE1vZGlmaWVkOiBmaWxlLmxhc3RNb2RpZmllZFxuICAgICAgfSwgJ3VzZUZpbGVVcGxvYWQnKVxuICAgICAgXG4gICAgICBjb25zdCB2YWxpZGF0aW9uID0gdmFsaWRhdGVGaWxlKGZpbGUpXG4gICAgICBpZiAoIXZhbGlkYXRpb24uaXNWYWxpZCkge1xuICAgICAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSB2YWxpZGF0aW9uLmVycm9yIHx8ICdJbnZhbGlkIGZpbGUgdHlwZSBvciBmb3JtYXQnXG4gICAgICAgIGxvZ2dlci5lcnJvcignRmlsZSB2YWxpZGF0aW9uIGZhaWxlZCcsIHtcbiAgICAgICAgICBmaWxlTmFtZTogZmlsZS5uYW1lLFxuICAgICAgICAgIGZpbGVUeXBlOiBmaWxlLnR5cGUsXG4gICAgICAgICAgZXJyb3I6IGVycm9yTWVzc2FnZSxcbiAgICAgICAgICB3YXJuaW5nczogdmFsaWRhdGlvbi53YXJuaW5nc1xuICAgICAgICB9LCAndXNlRmlsZVVwbG9hZCcpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvck1lc3NhZ2UpXG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmICh2YWxpZGF0aW9uLndhcm5pbmdzICYmIHZhbGlkYXRpb24ud2FybmluZ3MubGVuZ3RoID4gMCkge1xuICAgICAgICBsb2dnZXIud2FybignRmlsZSB2YWxpZGF0aW9uIHdhcm5pbmdzJywge1xuICAgICAgICAgIGZpbGVOYW1lOiBmaWxlLm5hbWUsXG4gICAgICAgICAgd2FybmluZ3M6IHZhbGlkYXRpb24ud2FybmluZ3NcbiAgICAgICAgfSwgJ3VzZUZpbGVVcGxvYWQnKVxuICAgICAgfVxuXG4gICAgICBsb2dnZXIuaW5mbygnUHJvY2Vzc2luZyB1cGxvYWRlZCBmaWxlJywge1xuICAgICAgICBmaWxlTmFtZTogZmlsZS5uYW1lLFxuICAgICAgICBmaWxlU2l6ZTogZmlsZS5zaXplLFxuICAgICAgICBmaWxlVHlwZTogZmlsZS50eXBlXG4gICAgICB9LCAndXNlRmlsZVVwbG9hZCcpXG5cbiAgICAgIC8vIENvbnZlcnQgdG8gYmFzZTY0IGZvciBwcm9jZXNzaW5nXG4gICAgICBjb25zdCBiYXNlNjQgPSBhd2FpdCBmaWxlVG9CYXNlNjQoZmlsZSlcbiAgICAgIFxuICAgICAgY29uc3QgdXBsb2FkZWRGaWxlOiBVcGxvYWRlZEZpbGUgPSB7XG4gICAgICAgIGZpbGUsXG4gICAgICAgIG5hbWU6IGZpbGUubmFtZSxcbiAgICAgICAgc2l6ZTogZmlsZS5zaXplLFxuICAgICAgICB0eXBlOiBmaWxlLnR5cGUsXG4gICAgICAgIGJhc2U2NCxcbiAgICAgICAgdXBsb2FkZWRBdDogbmV3IERhdGUoKVxuICAgICAgfVxuXG4gICAgICBzZXRVcGxvYWRlZEZpbGUodXBsb2FkZWRGaWxlKVxuICAgICAgXG4gICAgICBsb2dnZXIuaW5mbygnRmlsZSBwcm9jZXNzZWQgc3VjY2Vzc2Z1bGx5Jywge1xuICAgICAgICBmaWxlTmFtZTogZmlsZS5uYW1lLFxuICAgICAgICBiYXNlNjRMZW5ndGg6IGJhc2U2NC5sZW5ndGhcbiAgICAgIH0sICd1c2VGaWxlVXBsb2FkJylcblxuICAgICAgcmV0dXJuIHVwbG9hZGVkRmlsZVxuXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ0ZhaWxlZCB0byBwcm9jZXNzIGZpbGUnXG4gICAgICBzZXRVcGxvYWRFcnJvcihlcnJvck1lc3NhZ2UpXG4gICAgICBsb2dnZXIuZXJyb3IoJ0ZpbGUgcHJvY2Vzc2luZyBmYWlsZWQnLCBlcnJvciwgJ3VzZUZpbGVVcGxvYWQnKVxuICAgICAgdGhyb3cgZXJyb3JcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0SXNQcm9jZXNzaW5nKGZhbHNlKVxuICAgIH1cbiAgfSwgW10pXG5cbiAgY29uc3QgaGFuZGxlRmlsZVNlbGVjdCA9IHVzZUNhbGxiYWNrKGFzeW5jIChmaWxlczogRmlsZUxpc3QgfCBGaWxlW10pID0+IHtcbiAgICBjb25zdCBmaWxlQXJyYXkgPSBBcnJheS5mcm9tKGZpbGVzKVxuICAgIFxuICAgIGlmIChmaWxlQXJyYXkubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAoZmlsZUFycmF5Lmxlbmd0aCA+IDEpIHtcbiAgICAgIHNldFVwbG9hZEVycm9yKCdQbGVhc2Ugc2VsZWN0IG9ubHkgb25lIGZpbGUgYXQgYSB0aW1lJylcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGNvbnN0IGZpbGUgPSBmaWxlQXJyYXlbMF1cbiAgICBcbiAgICB0cnkge1xuICAgICAgYXdhaXQgcHJvY2Vzc0ZpbGUoZmlsZSlcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgLy8gRXJyb3IgaXMgYWxyZWFkeSBoYW5kbGVkIGluIHByb2Nlc3NGaWxlXG4gICAgfVxuICB9LCBbcHJvY2Vzc0ZpbGVdKVxuXG4gIGNvbnN0IGhhbmRsZURyb3AgPSB1c2VDYWxsYmFjayhhc3luYyAoZTogUmVhY3QuRHJhZ0V2ZW50PEhUTUxEaXZFbGVtZW50PikgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIHNldElzRHJhZ0FjdGl2ZShmYWxzZSlcbiAgICBcbiAgICBjb25zdCBmaWxlcyA9IGUuZGF0YVRyYW5zZmVyLmZpbGVzXG4gICAgYXdhaXQgaGFuZGxlRmlsZVNlbGVjdChmaWxlcylcbiAgfSwgW2hhbmRsZUZpbGVTZWxlY3RdKVxuXG4gIGNvbnN0IGhhbmRsZURyYWdPdmVyID0gdXNlQ2FsbGJhY2soKGU6IFJlYWN0LkRyYWdFdmVudDxIVE1MRGl2RWxlbWVudD4pID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICBzZXRJc0RyYWdBY3RpdmUodHJ1ZSlcbiAgfSwgW10pXG5cbiAgY29uc3QgaGFuZGxlRHJhZ0xlYXZlID0gdXNlQ2FsbGJhY2soKGU6IFJlYWN0LkRyYWdFdmVudDxIVE1MRGl2RWxlbWVudD4pID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICBzZXRJc0RyYWdBY3RpdmUoZmFsc2UpXG4gIH0sIFtdKVxuXG4gIGNvbnN0IGhhbmRsZUlucHV0Q2hhbmdlID0gdXNlQ2FsbGJhY2soYXN5bmMgKGU6IFJlYWN0LkNoYW5nZUV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgY29uc3QgZmlsZXMgPSBlLnRhcmdldC5maWxlc1xuICAgIGlmIChmaWxlcykge1xuICAgICAgYXdhaXQgaGFuZGxlRmlsZVNlbGVjdChmaWxlcylcbiAgICB9XG4gIH0sIFtoYW5kbGVGaWxlU2VsZWN0XSlcblxuICBjb25zdCBvcGVuRmlsZURpYWxvZyA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBmaWxlSW5wdXRSZWYuY3VycmVudD8uY2xpY2soKVxuICB9LCBbXSlcblxuICBjb25zdCBjbGVhckZpbGUgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2V0VXBsb2FkZWRGaWxlKG51bGwpXG4gICAgc2V0VXBsb2FkRXJyb3IobnVsbClcbiAgICBzZXRJc1Byb2Nlc3NpbmcoZmFsc2UpXG4gICAgXG4gICAgLy8gUmVzZXQgZmlsZSBpbnB1dFxuICAgIGlmIChmaWxlSW5wdXRSZWYuY3VycmVudCkge1xuICAgICAgZmlsZUlucHV0UmVmLmN1cnJlbnQudmFsdWUgPSAnJ1xuICAgIH1cblxuICAgIGxvZ2dlci5pbmZvKCdGaWxlIGNsZWFyZWQnLCB7fSwgJ3VzZUZpbGVVcGxvYWQnKVxuICB9LCBbXSlcblxuICBjb25zdCByZXRyeVVwbG9hZCA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBpZiAodXBsb2FkZWRGaWxlPy5maWxlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCBwcm9jZXNzRmlsZSh1cGxvYWRlZEZpbGUuZmlsZSlcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIC8vIEVycm9yIGlzIGFscmVhZHkgaGFuZGxlZCBpbiBwcm9jZXNzRmlsZVxuICAgICAgfVxuICAgIH1cbiAgfSwgW3VwbG9hZGVkRmlsZT8uZmlsZSwgcHJvY2Vzc0ZpbGVdKVxuXG4gIC8vIEdldCBmaWxlIHByZXZpZXcgVVJMIGZvciBpbWFnZXNcbiAgY29uc3QgZ2V0UHJldmlld1VybCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAoIXVwbG9hZGVkRmlsZT8uZmlsZSkgcmV0dXJuIG51bGxcbiAgICBcbiAgICBpZiAodXBsb2FkZWRGaWxlLmZpbGUudHlwZS5zdGFydHNXaXRoKCdpbWFnZS8nKSkge1xuICAgICAgcmV0dXJuIFVSTC5jcmVhdGVPYmplY3RVUkwodXBsb2FkZWRGaWxlLmZpbGUpXG4gICAgfVxuICAgIFxuICAgIHJldHVybiBudWxsXG4gIH0sIFt1cGxvYWRlZEZpbGU/LmZpbGVdKVxuXG4gIC8vIEdldCBmaWxlIGljb24gYmFzZWQgb24gdHlwZVxuICBjb25zdCBnZXRGaWxlSWNvbiA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAoIXVwbG9hZGVkRmlsZT8udHlwZSkgcmV0dXJuICdmaWxlJ1xuICAgIFxuICAgIGlmICh1cGxvYWRlZEZpbGUudHlwZSA9PT0gJ2FwcGxpY2F0aW9uL3BkZicpIHJldHVybiAnZmlsZS10ZXh0J1xuICAgIGlmICh1cGxvYWRlZEZpbGUudHlwZS5zdGFydHNXaXRoKCdpbWFnZS8nKSkgcmV0dXJuICdpbWFnZSdcbiAgICBpZiAodXBsb2FkZWRGaWxlLnR5cGUuaW5jbHVkZXMoJ3dvcmQnKSkgcmV0dXJuICdmaWxlLXRleHQnXG4gICAgaWYgKHVwbG9hZGVkRmlsZS50eXBlLmluY2x1ZGVzKCd0ZXh0JykpIHJldHVybiAnZmlsZS10ZXh0J1xuICAgIFxuICAgIHJldHVybiAnZmlsZSdcbiAgfSwgW3VwbG9hZGVkRmlsZT8udHlwZV0pXG5cbiAgLy8gQ2hlY2sgaWYgZmlsZSB0eXBlIGlzIHN1cHBvcnRlZFxuICBjb25zdCBpc0ZpbGVUeXBlU3VwcG9ydGVkID0gdXNlQ2FsbGJhY2soKGZpbGU6IEZpbGUpID0+IHtcbiAgICByZXR1cm4gQVBQX0NPTkZJRy5zdXBwb3J0ZWRGb3JtYXRzLnNvbWUoZm9ybWF0ID0+IHtcbiAgICAgIGlmIChmb3JtYXQuc3RhcnRzV2l0aCgnLicpKSB7XG4gICAgICAgIHJldHVybiBmaWxlLm5hbWUudG9Mb3dlckNhc2UoKS5lbmRzV2l0aChmb3JtYXQudG9Mb3dlckNhc2UoKSlcbiAgICAgIH1cbiAgICAgIHJldHVybiBmaWxlLnR5cGUgPT09IGZvcm1hdFxuICAgIH0pXG4gIH0sIFtdKVxuXG4gIC8vIEdldCB1cGxvYWQgcHJvZ3Jlc3MgKGZvciBmdXR1cmUgZW5oYW5jZW1lbnQpXG4gIGNvbnN0IGdldFVwbG9hZFByb2dyZXNzID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChpc1Byb2Nlc3NpbmcpIHJldHVybiA1MCAvLyBTaW11bGF0ZWQgcHJvZ3Jlc3NcbiAgICBpZiAodXBsb2FkZWRGaWxlKSByZXR1cm4gMTAwXG4gICAgcmV0dXJuIDBcbiAgfSwgW2lzUHJvY2Vzc2luZywgdXBsb2FkZWRGaWxlXSlcblxuICByZXR1cm4ge1xuICAgIHVwbG9hZGVkRmlsZSxcbiAgICBpc0RyYWdBY3RpdmUsXG4gICAgdXBsb2FkRXJyb3IsXG4gICAgaXNQcm9jZXNzaW5nLFxuICAgIGZpbGVJbnB1dFJlZixcbiAgICBoYW5kbGVEcm9wLFxuICAgIGhhbmRsZURyYWdPdmVyLFxuICAgIGhhbmRsZURyYWdMZWF2ZSxcbiAgICBoYW5kbGVJbnB1dENoYW5nZSxcbiAgICBvcGVuRmlsZURpYWxvZyxcbiAgICBjbGVhckZpbGUsXG4gICAgcmV0cnlVcGxvYWQsXG4gICAgZ2V0UHJldmlld1VybCxcbiAgICBnZXRGaWxlSWNvbixcbiAgICBpc0ZpbGVUeXBlU3VwcG9ydGVkLFxuICAgIGdldFVwbG9hZFByb2dyZXNzXG4gIH1cbn0iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VDYWxsYmFjayIsInVzZVJlZiIsImxvZ2dlciIsImZpbGVUb0Jhc2U2NCIsInZhbGlkYXRlRmlsZSIsIkFQUF9DT05GSUciLCJ1c2VGaWxlVXBsb2FkIiwidXBsb2FkZWRGaWxlIiwic2V0VXBsb2FkZWRGaWxlIiwiaXNEcmFnQWN0aXZlIiwic2V0SXNEcmFnQWN0aXZlIiwidXBsb2FkRXJyb3IiLCJzZXRVcGxvYWRFcnJvciIsImlzUHJvY2Vzc2luZyIsInNldElzUHJvY2Vzc2luZyIsImZpbGVJbnB1dFJlZiIsInByb2Nlc3NGaWxlIiwiZmlsZSIsImluZm8iLCJmaWxlTmFtZSIsIm5hbWUiLCJmaWxlU2l6ZSIsInNpemUiLCJmaWxlVHlwZSIsInR5cGUiLCJsYXN0TW9kaWZpZWQiLCJ2YWxpZGF0aW9uIiwiaXNWYWxpZCIsImVycm9yTWVzc2FnZSIsImVycm9yIiwid2FybmluZ3MiLCJFcnJvciIsImxlbmd0aCIsIndhcm4iLCJiYXNlNjQiLCJ1cGxvYWRlZEF0IiwiRGF0ZSIsImJhc2U2NExlbmd0aCIsIm1lc3NhZ2UiLCJoYW5kbGVGaWxlU2VsZWN0IiwiZmlsZXMiLCJmaWxlQXJyYXkiLCJBcnJheSIsImZyb20iLCJoYW5kbGVEcm9wIiwiZSIsInByZXZlbnREZWZhdWx0IiwiZGF0YVRyYW5zZmVyIiwiaGFuZGxlRHJhZ092ZXIiLCJoYW5kbGVEcmFnTGVhdmUiLCJoYW5kbGVJbnB1dENoYW5nZSIsInRhcmdldCIsIm9wZW5GaWxlRGlhbG9nIiwiY3VycmVudCIsImNsaWNrIiwiY2xlYXJGaWxlIiwidmFsdWUiLCJyZXRyeVVwbG9hZCIsImdldFByZXZpZXdVcmwiLCJzdGFydHNXaXRoIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiZ2V0RmlsZUljb24iLCJpbmNsdWRlcyIsImlzRmlsZVR5cGVTdXBwb3J0ZWQiLCJzdXBwb3J0ZWRGb3JtYXRzIiwic29tZSIsImZvcm1hdCIsInRvTG93ZXJDYXNlIiwiZW5kc1dpdGgiLCJnZXRVcGxvYWRQcm9ncmVzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./hooks/useFileUpload.ts\n"));

/***/ })

});